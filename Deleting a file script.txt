cat delete.sh
#!/bin/bash
SDFLEX=("IP Address1" "IP Address2" "IP Address3" "IP Address4")
ssh_user="root"
for host in "${SDFLEX[@]}";
do
ssh "$ssh_user@$host" '
{
sudo su -
cd /tmp/HPE
rm -rf move.sh
}'
done
In thi script always wrap remote commands in quotes (single '...' or double " depending on variable expansion needs)
With quotes → commands are executed remotely.
Without quotes → your local shell interprets them first.


cat delete.sh
#!/bin/bash
SDFLEX=("IP Address1" "IP Address2" "IP Address3" "IP Address4")
ssh_user="normal user"
for host in "${SDFLEX[@]}";
do
ssh "$ssh_user@$host" '
{
sudo su -
cd /tmp/HPE
rm -rf move.sh
} '
done

In this script when we login to server as normal user and try to sudo in to root then it logins to 1st IP Server and hangs
because when we try to sudo ssh by default opens an interactive shell, it switches into a root login shell that never exits 
so the script stays stuck there and never continues to the next IP.

cat delete.sh
#!/bin/bash
SDFLEX=("IP Address1" "IP Address2" "IP Address3" "IP Address4")
ssh_user="root"
for host in "${SDFLEX[@]}";
do
ssh "$ssh_user@$host" '
{
cd /tmp/HPE
rm -rf move.sh
} '
done

In this example when we remove [@] the task is performed only for 1st Ip Address
